# Generated by ariadne-codegen
# Source: tools/graphql_codegen/automations/

from __future__ import annotations

from typing import Literal

from pydantic import Field

from .base import GQLBase, Typename
from .fragments import WebhookIntegrationFields


class CreateWebhookIntegration(GQLBase):
    create_generic_webhook_integration: (
        CreateWebhookIntegrationCreateGenericWebhookIntegration | None
    ) = Field(alias="createGenericWebhookIntegration")


class CreateWebhookIntegrationCreateGenericWebhookIntegration(GQLBase):
    integration: (
        CreateWebhookIntegrationCreateGenericWebhookIntegrationIntegrationIntegration
        | CreateWebhookIntegrationCreateGenericWebhookIntegrationIntegrationGenericWebhookIntegration
    ) = Field(discriminator="typename__")


class CreateWebhookIntegrationCreateGenericWebhookIntegrationIntegrationIntegration(
    GQLBase
):
    typename__: Typename[
        Literal["GitHubOAuthIntegration", "Integration", "SlackIntegration"]
    ]


class CreateWebhookIntegrationCreateGenericWebhookIntegrationIntegrationGenericWebhookIntegration(
    WebhookIntegrationFields
):
    typename__: Typename[Literal["GenericWebhookIntegration"]]


CreateWebhookIntegration.model_rebuild()
CreateWebhookIntegrationCreateGenericWebhookIntegration.model_rebuild()
